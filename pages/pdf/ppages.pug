extends ../../template/layout
block title
    | pdfjs使用教程 - z-im.com
block keyword
    meta(name="keyword", content="z-im.com,前端分享,个人博客")
block keyword
    meta(name="description", content="z-im.com，分享前端技术")
block body
    .z-container
        .title
            h1 pdfjs使用教程
        .time 2018年2月8日14:08:41
        .content
            .section
                .subTitle pdf.js简单实例在线预览功能 == 自定义分页功能
                .count.
                        当前是#[span.cn=0]页，  | 共 #[span.cc 0]页
                .tools
                    .btn#prev 上一页
                    .btn#next 下一页
                canvas#canvas(style="border:1px solid black;")
            .bpn 相关文档
                ol
                    li
                        a(href='/pages/pdf/index.html') 利用html5实现pdf在线预览
                    li
                        a(href='/pages/pdf/pcanvas.html') 使用canvas来呈现内容
                    li
                        a(href='/pages/pdf/pbase64.html') 读取base64的数据
                    li
                        a(href='/pages/pdf/ppages.html') 自定义分页功能
                    li
                        a(href='/pages/pdf/viewer.html') 使用viewer
block script
    script(src='/libs/pdfjs/build/pdf.js')
    script.
        var url = '/assets/pdf/1.pdf';
        var pdfDoc = null,
            pageNum = 1,
            pageRendering = false,
            pageNumPending = null,
            scale = 0.8,
            canvas = document.getElementById('canvas'),
            ctx = canvas.getContext('2d');
        function renderPage(num) {
            pageRendering = true;
            pdfDoc.getPage(num).then(function (page) {
                var viewport = page.getViewport(scale);
                canvas.height = viewport.height;
                canvas.width = document.querySelector('main>.z-container').offsetWidth;

                var renderContext = {
                    canvasContext: ctx,
                    viewport: viewport
                };
                var renderTask = page.render(renderContext);
                pageAdap();
                renderTask.promise.then(function () {
                    pageRendering = false;
                    if (pageNumPending !== null) {
                        // New page rendering is pending
                        renderPage(pageNumPending);
                        pageNumPending = null;
                    }
                });
            });
            document.querySelector('.cn').textContent = pageNum;
        }
        function queueRenderPage(num) {
            if (pageRendering) {
                pageNumPending = num;
            } else {
                renderPage(num);
            }
        }

        function onPrevPage() {
            if (pageNum <= 1) {
                return;
            }
            pageNum--;
            queueRenderPage(pageNum);
        }
        document.querySelector('#prev').addEventListener('click', onPrevPage);

        function onNextPage() {
            if (pageNum >= pdfDoc.numPages) {
                return;
            }
            pageNum++;
            queueRenderPage(pageNum);
        }
        document.querySelector('#next').addEventListener('click', onNextPage);

        PDFJS.getDocument(url).then(function (pdfDoc_) {
            pdfDoc = pdfDoc_;
            document.querySelector('.cc').textContent = pdfDoc.numPages;

            renderPage(pageNum);
        });

